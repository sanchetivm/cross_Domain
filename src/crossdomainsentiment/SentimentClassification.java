/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package crossdomainsentiment;

import java.io.File;
import java.io.FileInputStream;
import java.util.ArrayList;

/**
 *
 * @author Elcot
 */
public class SentimentClassification extends javax.swing.JFrame {

    /**
     * Creates new form SentimentClassification
     */
    public static ArrayList sourceafterSentiClassi=new ArrayList();
    public static ArrayList targetafterSentiClassi=new ArrayList();
    
    public static ArrayList sourceSentimentWords=new ArrayList();
    public static ArrayList targetSentimentWords=new ArrayList();
    
      public static ArrayList allsentiments=new ArrayList();
    
    public SentimentClassification() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 0, 102));

        jLabel1.setFont(new java.awt.Font("Andalus", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Sentiment Classification");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(191, 191, 191)
                .addComponent(jLabel1)
                .addContainerGap(734, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );

        jButton1.setText("Sentiment Classification");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton2.setText("Rule 1: Pivots Matching");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try
        {                          
            ArrayList posWd=new ArrayList();
            ArrayList negWd=new ArrayList();
            
            File fe1=new File("C:/Users/ADMIN/Desktop/Existing/Positive.txt");
            FileInputStream fis1=new FileInputStream(fe1);
            byte data1[]=new byte[fis1.available()];
            fis1.read(data1);
            fis1.close();
            
            String sg1[]=new String(data1).split("\n");
               
            for(int i=0;i<sg1.length;i++)
            {
                posWd.add(sg1[i].trim());   
                 allsentiments.add(sg1[i].trim());
            }
             
            File fe2=new File("C:/Users/ADMIN/Desktop/Existing/Negative.txt");
            FileInputStream fis2=new FileInputStream(fe2);
            byte data2[]=new byte[fis2.available()];
            fis2.read(data2);
            fis2.close();
            
            String sg2[]=new String(data2).split("\n");
               
            for(int i=0;i<sg2.length;i++)
            {
                negWd.add(sg2[i].trim());
                 allsentiments.add(sg2[i].trim());
            }
            
            String soursente="";
            for(int i=0;i<Preprocessing.afterpresourceDatasetValues.size();i++)
            {
                String res="";
                String g1=Preprocessing.afterpresourceDatasetValues.get(i).toString().trim();
                String g2[]=g1.trim().split(" ");// how  are  you?
                int pos=0;
                int neg=0;
                
                ArrayList posnorep=new ArrayList();
                ArrayList negnorep=new ArrayList();
                
                String poswor="",negwor="";
                for(int j=0;j<g2.length;j++)
                {
                    String g3=g2[j].trim();
                    if(posWd.contains(g3.trim()))
                    {
                        pos++;
                        if(!(posnorep.contains(g3.trim())))
                        {
                            poswor=poswor+g3.trim()+",";
                            posnorep.add(g3.trim());
                        }
                    }
                    if(negWd.contains(g3.trim()))
                    {
                        neg++;
                        if(!(negnorep.contains(g3.trim())))
                        {
                            negwor=negwor+g3.trim()+",";
                            negnorep.add(g3.trim());
                        }
                    }
                }
                if(i==0)
                {
                     System.out.println("SENTENCE ="+g1);
                     System.out.println("posnorep ="+posnorep);
                     System.out.println("negnorep ="+negnorep);
                }
               
                if(pos==0 && neg==0)
                {
                    res="Neutral"; 
                    String positivewords="";
                    sourceSentimentWords.add(positivewords);
                }
                else if(pos>neg)
                {
                    res="Positive";  
                    String positivewords=poswor.substring(0,poswor.lastIndexOf(','));
                    sourceSentimentWords.add(positivewords.trim());
                }
                else
                {
                    res="Negative";  
                    String negativewords=negwor.substring(0,negwor.lastIndexOf(','));
                    sourceSentimentWords.add(negativewords.trim());
                }   
                String classires=g1.trim()+" --> "+res.trim();
                soursente=soursente+classires.trim()+"\n";
                sourceafterSentiClassi.add(classires.trim());                
            }
            String sourcesentence=soursente.substring(0,soursente.lastIndexOf('\n'));
            
            String tarsente="";
            for(int i=0;i<Preprocessing.afterpretargetDatasetValues.size();i++)
            {
                String res="";
                String g1=Preprocessing.afterpretargetDatasetValues.get(i).toString().trim();
                String g2[]=g1.trim().split(" ");
                int pos=0;
                int neg=0;
                 
                ArrayList posnorep=new ArrayList();
                ArrayList negnorep=new ArrayList();
                
                String poswor="",negwor="";
                for(int j=0;j<g2.length;j++)
                {
                    String g3=g2[j].trim();
                    if(posWd.contains(g3.trim()))
                    {
                        pos++;
                        if(!(posnorep.contains(g3.trim())))
                        {
                            poswor=poswor+g3.trim()+",";
                            posnorep.add(g3.trim());
                        }
                    }
                    if(negWd.contains(g3.trim()))
                    {
                        neg++;
                        if(!(negnorep.contains(g3.trim())))
                        {
                            negwor=negwor+g3.trim()+",";
                            negnorep.add(g3.trim());
                        }
                    }
                }
                if(pos==0 && neg==0)
                {
                    res="Neutral"; 
                    String positivewords="";
                    targetSentimentWords.add(positivewords);
                }
                else if( pos>neg)
                {
                    res="Positive"; 
                    String positivewords=poswor.substring(0,poswor.lastIndexOf(','));
                    targetSentimentWords.add(positivewords);
                }
                else
                {
                    res="Negative";  
                    String negativewords=negwor.substring(0,negwor.lastIndexOf(','));
                    targetSentimentWords.add(negativewords.trim());
                }   
                String classires=g1.trim()+" --> "+res.trim();
                tarsente=tarsente+classires.trim()+"\n";
                targetafterSentiClassi.add(classires.trim());
            }
            String targetsentence=tarsente.substring(0,tarsente.lastIndexOf('\n'));
            String forsource="================================================\n            "+MainFrame.sourceFileName.trim()+"\n================================================\n"+sourcesentence.trim();
            String fortarget="================================================\n            "+MainFrame.targetFileName.trim()+"\n================================================\n"+targetsentence.trim();
            jTextArea1.setText(forsource.trim()+"\n\n\n"+fortarget.trim());
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        PivotsMatching mf=new PivotsMatching();
        mf.setTitle("Pivots Matching");
        mf.setVisible(true);
        mf.setResizable(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SentimentClassification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SentimentClassification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SentimentClassification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SentimentClassification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SentimentClassification().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
