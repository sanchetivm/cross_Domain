/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package crossdomainsentiment;

import java.util.ArrayList;
import java.util.Collections;

/**
 *
 * @author Elcot
 */
public class PivotsMatching extends javax.swing.JFrame {

    /**
     * Creates new form PivotsMatching
     */
    public static ArrayList fori=new ArrayList();
    public static ArrayList forj=new ArrayList();
     public static ArrayList srcresult=new ArrayList();
    public static ArrayList dstresult=new ArrayList();
    public PivotsMatching() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setFont(new java.awt.Font("Andalus", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Pivots Matching");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(230, 230, 230)
                .addComponent(jLabel1)
                .addContainerGap(816, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1))
        );

        jButton1.setText("Pivots Matching");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton2.setText("Rule 2: Friend Attraction and Enemy Dispersion");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    String s,s1;
  static String sk,sk1;
  static String pivots="";
  
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        System.out.println("Rule 1: Pivots Matching\n========================================");
        
        for(int i=0;i<SentimentClassification.sourceafterSentiClassi.size();i++)
        {
             s=SentimentClassification.sourceafterSentiClassi.get(i).toString().trim();
             sk=SentimentClassification.sourceSentimentWords.get(i).toString().trim();
            if(!(sk.trim().equals("")))
            {
            String sp[]=sk.trim().split(",");
            ArrayList temp=new ArrayList();
            for(int j=0;j<sp.length;j++)
            {
                if(!(temp.contains(sp[j].trim())))
                {
                    temp.add(sp[j].trim());
                }
            }
            
            ArrayList couonly=new ArrayList();
            ArrayList couwithj=new ArrayList();
            for(int j=0;j<SentimentClassification.targetafterSentiClassi.size();j++)
            {
                 s1=SentimentClassification.targetafterSentiClassi.get(j).toString().trim();
                 sk1=SentimentClassification.targetSentimentWords.get(j).toString().trim();
                String sp1[]=sk1.trim().split(",");
                int cou=0;
                ArrayList noreppv=new ArrayList();
                for(int k=0;k<sp1.length;k++)
                {
                    if(temp.contains(sp1[k].trim()))
                    {
                        cou++;      
                        if(!(noreppv.contains(sp1[k].trim())))
                        {
                            noreppv.add(sp1[k].trim());
                        }
                    }
                }
                if(cou!=0)
                {
                    String nr="";
                    for(int l=0;l<noreppv.size();l++)
                    {
                        nr=nr+noreppv.get(l).toString().trim()+", ";
                    }
                    String pivots=nr.substring(0,nr.lastIndexOf(','));
                    
                    couonly.add(cou);
                    couwithj.add(cou+"#"+j+"#"+pivots.trim());
                    if(j==3)
                    {
                      System.out.println("SENTENCE source="+s);
                        System.out.println("SENTENCE target ="+s1);
                         System.out.println("words source="+sk);
                        System.out.println("words target ="+sk1);
                     System.out.println("posnorep ="+cou);
                     System.out.println("negnorep ="+pivots);  
                   
                    }
                }
            }
            if(!(couonly.isEmpty()))
            {
                int j1=0;
                Collections.sort(couonly, Collections.reverseOrder());            
                String max=couonly.get(0).toString().trim();
                for(int j=0;j<couwithj.size();j++)
                {
                    String st[]=couwithj.get(j).toString().trim().split("#");
                    if(st[0].trim().equals(max.trim()))
                    {
                        j1=Integer.parseInt(st[1].trim());
                        pivots=st[2].trim();
                        break;
                    }                
                }
                if(!(forj.contains(""+j1)))
                {
                    fori.add(""+i);
                    forj.add(""+j1);
                    String s1=SentimentClassification.targetafterSentiClassi.get(j1).toString().trim();
                    jTextArea1.append("Source --> "+s.trim()+"\nTarget --> "+s1.trim()+"\nPivots --> "+pivots.trim()+"\n\n");
                    String sk1=SentimentClassification.targetSentimentWords.get(j1).toString().trim();
                    System.out.println(sk.trim());
                    System.out.println(sk1.trim());
                      srcresult.add(s.trim());
                    dstresult.add(s1.trim());
                    System.out.println("------------------------------------------------------");
                }
            }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        FriendEnemy mf=new FriendEnemy();
        mf.setTitle("Friend Attraction and Enemy Dispersion");
        mf.setVisible(true);
        mf.setResizable(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PivotsMatching.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PivotsMatching.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PivotsMatching.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PivotsMatching.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PivotsMatching().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
